package VORLESUNG.WiederholungPA02Karten

/*
In der Variable cards ist ein Kartenset in Form einer Liste gespeichert.
Beispiel:
    "‚ô•Ô∏è7" steht f√ºr die Karte "Herz Sieben"
    "‚ô•Ô∏èA" steht f√ºr die Karte "Herz Ass"
 */
val cards: MutableList<String> = mutableListOf(
    "‚ô•Ô∏è7", "‚ô¶Ô∏è7", "‚ô†Ô∏è7", "‚ô£Ô∏è7",
    "‚ô•Ô∏è8", "‚ô¶Ô∏è8", "‚ô†Ô∏è8", "‚ô£Ô∏è8",
    "‚ô•Ô∏è9", "‚ô¶Ô∏è9", "‚ô†Ô∏è9", "‚ô£Ô∏è9",
    "‚ô•Ô∏è10", "‚ô¶Ô∏è10", "‚ô†Ô∏è10", "‚ô£Ô∏è10",
    "‚ô•Ô∏èB", "‚ô¶Ô∏èB", "‚ô†Ô∏èB", "‚ô£Ô∏èB",
    "‚ô•Ô∏èD", "‚ô¶Ô∏èD", "‚ô†Ô∏èD", "‚ô£Ô∏èD",
    "‚ô•Ô∏èK", "‚ô¶Ô∏èK", "‚ô†Ô∏èK", "‚ô£Ô∏èK",
    "‚ô•Ô∏èA", "‚ô¶Ô∏èA", "‚ô†Ô∏èA", "‚ô£Ô∏èA",
    "üÉèJOKER"
)


/*
In der Variable values sind die Werte der Karten in einer Map gespeichert.
Beispiel:
    "‚ô•Ô∏è7" to 1 steht f√ºr einen Wert von 1 f√ºr die Karte "Herz Sieben"
    "‚ô•Ô∏èA" to 8 steht f√ºr einen Wert von 8 f√ºr die Karte "Herz Ass"
Bei einem Vergleich der Werte w√ºrde also das "Herz Ass" gewinnen
 */
val cardValues: Map<String, Int> = mapOf(
    "‚ô•Ô∏è7" to 1, "‚ô¶Ô∏è7" to 1, "‚ô†Ô∏è7" to 1, "‚ô£Ô∏è7" to 1,
    "‚ô•Ô∏è8" to 2, "‚ô¶Ô∏è8" to 2, "‚ô†Ô∏è8" to 2, "‚ô£Ô∏è8" to 2,
    "‚ô•Ô∏è9" to 3, "‚ô¶Ô∏è9" to 3, "‚ô†Ô∏è9" to 3, "‚ô£Ô∏è9" to 3,
    "‚ô•Ô∏è10" to 4, "‚ô¶Ô∏è10" to 4, "‚ô†Ô∏è10" to 4, "‚ô£Ô∏è10" to 4,
    "‚ô•Ô∏èB" to 5, "‚ô¶Ô∏èB" to 5, "‚ô†Ô∏èB" to 5, "‚ô£Ô∏èB" to 5,
    "‚ô•Ô∏èD" to 6, "‚ô¶Ô∏èD" to 6, "‚ô†Ô∏èD" to 6, "‚ô£Ô∏èD" to 6,
    "‚ô•Ô∏èK" to 7, "‚ô¶Ô∏èK" to 7, "‚ô†Ô∏èK" to 7, "‚ô£Ô∏èK" to 7,
    "‚ô•Ô∏èA" to 8, "‚ô¶Ô∏èA" to 8, "‚ô†Ô∏èA" to 8, "‚ô£Ô∏èA" to 8,
    "üÉèJOKER" to 10
)

fun main() {
    // Zur Erinnerung
        // Beispiel Syntax: Liste anlegen
        var liste: List<String> = listOf("Jacke", "Hose","Schal","M√ºtze")
        var numbers: List<Int> = listOf(1,2,3,4,5)

    // Aufgabe 1: Karten mischen
    cards.shuffle()

    // Aufgabe 2: Spielernamen eingeben
    val spieler1 = inputPlayerName()
    val spieler2: String = inputPlayerName()

    // Aufgabe 3: Spielerh√§nde erstellen
    // leere Hand
    val handSpieler1: MutableList<String> = mutableListOf()
    val handSpieler2: MutableList<String> = mutableListOf()

    // erste Karte vom cards Stapel ziehen, auf die Hand legen
        // lange Variante: Variable
        var firstCard: String = cards.removeFirst()
        handSpieler1.add(firstCard)

        // kurze Variante: ohne Variablen, spieler kriegen abwechselnd die oberste Karte
        handSpieler2.add(cards.removeFirst())
        handSpieler1.add(cards.removeFirst())
        handSpieler2.add(cards.removeFirst())
        handSpieler1.add(cards.removeFirst())
        handSpieler2.add(cards.removeFirst())

    println("$spieler1: $handSpieler1")
    println("$spieler2: $handSpieler2")


    // Aufgabe 4: in Funktion ausgelagert
    stealCard(spieler1,handSpieler1,spieler2,handSpieler2)
    stealCard(spieler2,handSpieler2,spieler1,handSpieler1)


    // Aufgabe 5
     /*
     Programmiere eine Benutzerinteraktion
    Beide Spieler sollen nacheinander eine Zahl zwischen 1 und 3 eingeben k√∂nnen
    Die entsprechende Karte soll entfernt werden
    Die oberste Karte aus dem Stapel soll gezogen werden
    Gib jeweils auf der Konsole aus, welche Karte abgeworfen wurde und welche gezogen wurde
      */

    replaceCard(spieler1,handSpieler1)
    replaceCard(spieler2,handSpieler2)
    handSpieler2.add(cards.removeFirst())


    // Aufgabe 6:
    // Rechne den Gesamtwert der Karten f√ºr jeden Spieler aus. Nutze daf√ºr die cardValues Map
    calculateHandWorth(spieler1,handSpieler1)
    calculateHandWorth(spieler2,handSpieler2)


}

fun inputPlayerName(): String {
    println("Bitte Namen f√ºr deinen Spieler eingeben...")
    return readln()

}

fun calculateHandWorth(playerName: String, playerHand: MutableList<String>) {
    // 1. Variable, in die ich Werte speichere
    var values: Int = 0

    // 2. Rechnung beginnen
    // lange Variante:
    // Variable mit dem Inhalt der Karte aus der Hand
    var inhalt = playerHand[0]
    // Wert aus der Map in Variable speichern
    var value: Int = cardValues[inhalt]!!

    // Wert in die Values Variable addieren
    values = values + value
    values = values + cardValues[playerHand[1]]!!
    values = values + cardValues[playerHand[2]]!!

    println("Wert der Hand von $playerName: $values")
}

fun replaceCard(playerName: String, playerHand: MutableList<String>) {
    println("$playerName, welche Karte willst du abwerfen? \nBitte Zahl zwischen 1 und 3 eingeben...")
    var input = readln().toInt()-1 // minus(1)
    println("Spieler 1 hat die Karte ${input+1} (${playerHand[input]}) ausgew√§hlt, sie wird abgeworfen...")
    // karte abwerfen
    playerHand.removeAt(input)
    playerHand.add(cards.removeFirst())
    println("$playerName zieht neue Karte vom Stapel...")
    println("Neue Hand $playerName: $playerHand")
}



/**
 * l√§sst einen spieler eine Karte aus der hand des anderen spielers klauen
 * @param dieb name des diebs
 * @param diebHand, der klauende
 * @param opfer name des opfers
 * @param opferHand, der beklaute
 */
fun stealCard(opfer: String, opferHand: MutableList<String>, dieb: String, diebHand: MutableList<String>, ){

    // eine zuf√§llige Karte vom Opfer ausw√§hlen
    var randomCard: String = opferHand.random()
    println("Zuf√§llige geklaute Karte von $opfer: $randomCard")
    // diese karte vom opfer entfernen
    opferHand.remove(randomCard)
    // diese karte dem dieb geben
    diebHand.add(randomCard)

    println("$dieb hat $randomCard von $opfer gestohlen.")
    println("$dieb: $diebHand")
    println("$opfer: $opferHand")
}
